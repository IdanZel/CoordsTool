<Window x:Class="CoordsTool.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CoordsTool.WPF"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Title="Coords Tool" Height="360" Width="500"
        Background="#222" MinHeight="300" MinWidth="450" WindowStyle="None">
    <Window.Resources>
        <Style TargetType="RadioButton">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <!-- Replaces the radio button with an image -->
                        <Border BorderBrush="White" Background="Transparent" Width="25" Height="25"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Image Width="20" Height="20"
                                   Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ImageButton" TargetType="Button">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" Value="1" TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="*" />
            <RowDefinition Height="110" />
        </Grid.RowDefinitions>

        <!-- Custom title bar -->
        <Grid Grid.Row="0" Background="#111" MouseDown="OnTitleBarMouseDown">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="4,0,0,0">
                <Label Content="Coords Tool" FontSize="14" FontWeight="Bold" />

                <!-- Update available button -->
                <Button x:Name="UpdateAvailableButton" Style="{StaticResource TransparentButton}"
                        Background="Transparent" Margin="0,2,0,0" Foreground="{StaticResource OpaqueBackground}"
                        Click="OnClickUpdateAvailable" Visibility="Hidden" IsEnabled="False"
                        ToolTipService.InitialShowDelay="500" ToolTipService.ToolTip="New update available">
                    <TextBlock Text="⦿" FontSize="22" Foreground="#FF8" VerticalAlignment="Center" Padding="0,0,1,2" />
                </Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                <!-- Minimize button -->
                <Button Style="{StaticResource TransparentButton}" Margin="0,4,4,0" Background="#333" Foreground="#555"
                        Click="OnClickMinimize">
                    <TextBlock Text="_" FontSize="28" Foreground="White" VerticalAlignment="Center" Padding="0,0,0,19" />
                </Button>

                <!-- Exit button -->
                <Button Style="{StaticResource TransparentButton}" Margin="0,4,4,0" Background="DarkRed" Foreground="Red"
                        Click="OnClickExit">
                    <TextBlock Text="✖" FontSize="14" Foreground="White" VerticalAlignment="Center" Padding="0,0,0,2" />
                </Button>
            </StackPanel>
        </Grid>

        <!-- Middle row: Main content - Coordinates table -->
        <DataGrid x:Name="CoordinatesTable" Grid.Row="1" Margin="10" Background="#222" BorderThickness="0"
                  CanUserReorderColumns="False" CanUserAddRows="False" AutoGenerateColumns="False"
                  VerticalGridLinesBrush="White" HorizontalGridLinesBrush="#888"
                  RowHeaderWidth="0" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                  dd:DragDrop.DropScrollingMode="VerticalOnly"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  BeginningEdit="OnEditCoordinatesTableLabelCell"
                  ItemsSource="{Binding CoordinatesList}" d:DataContext="{d:DesignInstance local:MainWindow}">
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Padding" Value="5,0,0,5" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="BorderBrush" Value="White" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontSize" Value="13" />
                </Style>

                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="3,5,0,5" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="FontSize" Value="13" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <!-- A workaround for applying padding to cells: https://stackoverflow.com/a/5247078 -->
                                <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent" />
                </Style>

                <Style x:Key="InnerColumnHeader" TargetType="DataGridColumnHeader"
                       BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                    <Setter Property="BorderThickness" Value="0,0,1,1" />
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <!-- Coordinates column -->
                <DataGridTemplateColumn Width="7*" Header="Coordinates" IsReadOnly="True"
                                        HeaderStyle="{StaticResource InnerColumnHeader}">
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="Padding" Value="0"></Setter>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <local:CoordinatesDisplay
                                    Coordinates="{Binding Coordinates, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Label column -->
                <DataGridTextColumn Width="6*" Header="Label" HeaderStyle="{StaticResource InnerColumnHeader}"
                                    Binding="{Binding Label}">
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="CaretBrush" Value="White" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Time column -->
                <DataGridTextColumn x:Name="TimeColumn" Width="5*" Header="Time" IsReadOnly="True"
                                    HeaderStyle="{StaticResource InnerColumnHeader}"
                                    Binding="{Binding TimeAdded, StringFormat=HH:mm dd/MM/yyyy}" />

                <!-- Delete button column -->
                <DataGridTemplateColumn Width="1*" Header="" IsReadOnly="True" CanUserResize="False">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,2,0"></Setter>
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>

                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <!-- Clear all button -->
                            <Button Width="18" Height="18" Style="{StaticResource ImageButton}"
                                    Click="OnClearAllSingleClick" MouseDoubleClick="OnClearAllDoubleClick"
                                    MouseLeave="OnClearAllMouseLeave" ToolTipService.InitialShowDelay="500">
                                <Button.ToolTip>
                                    <ToolTip Content="Double-click to clear all coordinates" />
                                </Button.ToolTip>
                                <Image Source="/Resources/Buttons/clear.png" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>

                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <!-- A hack for removing the border at the right edge of the grid: https://stackoverflow.com/a/27395182 -->
                            <Setter Property="Margin" Value="0,0,-1,0"></Setter>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!--  Remove button -->
                            <Button Width="18" Height="18" Style="{StaticResource TransparentButton}" 
                                    Background="Transparent"
                                    Click="OnDeleteCoordinates">
                                <Button.Foreground>
                                    <SolidColorBrush Color="IndianRed" Opacity="0.4" />
                                </Button.Foreground>
                                <TextBlock Text="✕" FontSize="15" Foreground="OrangeRed" VerticalAlignment="Center" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Bottom row: Manual input (coordinates and label) -->
        <StackPanel Grid.Row="2" HorizontalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Width" Value="90" />
                    <Setter Property="HorizontalContentAlignment" Value="Right" />
                </Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="Width" Value="250" />
                    <Setter Property="Margin" Value="5,0,0,0" />
                </Style>
            </StackPanel.Resources>

            <!-- Coordinates input -->
            <StackPanel Orientation="Horizontal">
                <Label Content="Coordinates" />
                <TextBox x:Name="CoordinatesTextBox" KeyDown="OnTextBoxKeyDown" TabIndex="0" />

                <!-- Dimension selection -->
                <Border x:Name="DimensionButtonsBorder" Margin="5,0,0,0" BorderBrush="Transparent" BorderThickness="2">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton x:Name="OverworldRadioButton" Content="/Resources/Textures/grass-block.png" />
                        <RadioButton x:Name="NetherRadioButton" Content="/Resources/Textures/netherrack.png" />
                        <RadioButton x:Name="EndRadioButton" Content="/Resources/Textures/end-stone.png" />
                    </StackPanel>
                </Border>
            </StackPanel>

            <!-- Label input -->
            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                <Label Content="Label" />
                <TextBox x:Name="LabelTextBox" KeyDown="OnTextBoxKeyDown" TabIndex="1" />
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <!-- Save button -->
                <Button Style="{StaticResource TransparentButton}" Click="OnSaveCoordinates"
                        Margin="10,10" FontSize="14" Width="60" Height="30"
                        Background="Transparent" Foreground="{StaticResource OpaqueBackground}"
                        BorderThickness="2" BorderBrush="White" TabIndex="2">
                    <TextBlock Text="Save" FontSize="14" Foreground="White" VerticalAlignment="Center" Padding="0,0,2,3" />

                </Button>

                <!-- Restore button -->
                <Button Style="{StaticResource TransparentButton}" Click="OnClickRestore"
                        Background="Transparent" Foreground="{StaticResource OpaqueBackground}"
                        ToolTip="Restore deleted coordinates" ToolTipService.InitialShowDelay="500">
                    <TextBlock Text="⮌" FontSize="22" Foreground="White" VerticalAlignment="Center" Padding="0,3,2,6" />
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- Settings button -->
        <Button Grid.Row="2" Width="40" Height="40" Margin="10,0,0,10" Style="{StaticResource ImageButton}"
                VerticalAlignment="Bottom" HorizontalAlignment="Left" Click="OnSettingsButtonClick">
            <Image Source="/Resources/Buttons/settings.png" />
        </Button>
    </Grid>
</Window>